include:
  - remote: 'https://gitlab.com/ge-ren-ga-devops-ctt-demo/ci-libraries/raw/master/.gitlab-ci-template-conan.yml'

variables: 
  VERSION: 0.2.0
  DOCKER_HOST: tcp://docker:2375
  X86_DOCKER_IMAGE: conanio/gcc8
  X86_64_DOCKER_IMAGE: conanio/gcc8
  ARMV7_DOCKER_IMAGE: conanio/gcc8-armv7
  X86_CONAN_PROFILE: profiles/x86
  X86_64_CONAN_PROFILE: profiles/x86_64
  ARMV7_CONAN_PROFILE: profiles/armv7
  ARMV7_RUNTIME_DOCKER_IMAGE: arm32v7/debian
  GOOGLE_TEST_FOLDER_PATH: build/test/bin
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  ORG_NAME: ge-ren-ga-devops-ctt-demo+cpp-sample
  CHANNEL: stable
  CONAN_USER_HOME: ${CI_PROJECT_DIR}

stages:
  - before
  - build
  - test
  - sonar
  - deploy

#windows:
  #stage: before
  #image: arm64v8/ubuntu
  #image: ubuntu
  #image: servercore:ltsc2019
  #tags:
  #- windows
  #tags:
  #  - kubernetes
  #script:
  #  - Get-ComputerInfo

# docker-compose:
#   stage: before
#   image: docker:stable
#   tags:
#     - docker
#   services:
#   - docker:dind
#   script:
#     - docker info
#     - docker-compose up -d
#     - docker ps

get-sonar-binaries: 
  stage: .pre
  cache: 
    policy: push
    key: "${CI_COMMIT_SHORT_SHA}"
    paths: 
      - build-wrapper/
      - sonar-scanner/
  script: 
    # Download sonar-scanner
    - curl -sSLo ./sonar-scanner.zip 'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip'
    - unzip -o sonar-scanner.zip
    - mv sonar-scanner-4.2.0.1873-linux sonar-scanner
    # Download build-wrapper
    - curl -sSLo ./build-wrapper-linux-x86.zip "${SONAR_HOST_URL}/static/cpp/build-wrapper-linux-x86.zip"
    - unzip -oj build-wrapper-linux-x86.zip -d ./build-wrapper

#pages:
#  extends: .pages
  
x64:build:
  extends: .build
  variables:
    CONAN_PROFILE: $X86_64_CONAN_PROFILE 
  image: $X86_64_DOCKER_IMAGE
  
x86:build:
  extends: .build
  variables:
    CONAN_PROFILE: $X86_CONAN_PROFILE 
  image: $X86_DOCKER_IMAGE 

armv7:build:
  extends: .build
  variables:
    CONAN_PROFILE: $ARMV7_CONAN_PROFILE  
  image: $ARMV7_DOCKER_IMAGE

  
x64:test:
  extends: .test 
  needs: ["x64:build"]
  dependencies:
    - x64:build
  image: $X86_64_DOCKER_IMAGE
  
x86:test:
  extends: .test 
  needs: ["x86:build"]
  dependencies:
    - x86:build
  image: $X86_DOCKER_IMAGE

# armv7:test:
#   extends: .test
#   needs: ["armv7:build"]
#   dependencies:
#     - armv7:build
#   image: $ARMV7_RUNTIME_DOCKER_IMAGE

sonar:
  extends: .sonar

deploy:
  extends: .deploy


  
