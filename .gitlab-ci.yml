variables:
  DOCKER_HOST: tcp://docker:2375
  X86_DOCKER_IMAGE: conanio/gcc8
  X86_64_DOCKER_IMAGE: conanio/gcc8
  ARMV7_DOCKER_IMAGE: conanio/gcc8-armv7
  X86_CONAN_PROFILE: profiles/x86
  X86_64_CONAN_PROFILE: profiles/x86_64
  ARMV7_CONAN_PROFILE: profiles/armv7
  ARMV7_RUNTIME_DOCKER_IMAGE: arm32v7/debian 

.build:
  image: conanio/gcc8
  #tags:
  #  - kubernetes
  stage: build
  script:
    - sudo chmod +x *.sh
    - ./build.sh $CONAN_PROFILE
  artifacts:
    paths:
      - build

.coverage:
  image: $X86_64_DOCKER_IMAGE
  #tags:
  #  - kubernetes
  stage: build
  variables:
    CONAN_PROFILE: $X86_64_CONAN_PROFILE
    ENABLE_COVERAGE: 1
  script:
    - pip install gcovr
    - sudo chmod +x *.sh
    - ./build.sh $CONAN_PROFILE
  artifacts:
    reports:
      cobertura: build/coverage.xml

.test:
  image: conanio/gcc8
  #tags:
  #  - gitlab-org
  stage: test
  script:
    - cd build/test/bin && ./GoogleTests --gtest_output=xml:report.xml
  artifacts:
    reports:
      junit: build/test/bin/report.xml

stages:
  - before
  - build
  - test
  - deploy

#windows:
  #stage: before
  #image: arm64v8/ubuntu
  #image: ubuntu
  #image: servercore:ltsc2019
  #tags:
  #- windows
  #tags:
  #  - kubernetes
  #script:
  #  - Get-ComputerInfo

# docker-compose:
#   stage: before
#   image: docker:stable
#   tags:
#     - docker
#   services:
#   - docker:dind
#   script:
#     - docker info
#     - docker-compose up -d
#     - docker ps

coverage:
  extends: .coverage
  
x64:build:
  extends: .build
  variables:
    CONAN_PROFILE: $X86_64_CONAN_PROFILE 
  image: $X86_64_DOCKER_IMAGE
  

x64:test:
  extends: .test 
  needs: ["x64:build"]
  dependencies:
    - x64:build
  image: $X86_64_DOCKER_IMAGE

armv7:build:
  extends: .build
  variables:
    CONAN_PROFILE: $ARMV7_CONAN_PROFILE  
  image: $ARMV7_DOCKER_IMAGE

armv7:test:
  extends: .test
  needs: ["armv7:build"]
  dependencies:
    - armv7:build
  image: $ARMV7_RUNTIME_DOCKER_IMAGE
  
